<UserControl x:Class="SlideDock.Views.ExpandedDockView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewmodels="clr-namespace:SlideDock.ViewModels"
             xmlns:local="clr-namespace:SlideDock.Views"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="280"
             DataContext="{Binding}">

    <UserControl.Resources>
        <!-- Rotaciona o texto para vertical -->
        <RotateTransform x:Key="RotateTextTransform" Angle="270"/>
        <RotateTransform x:Key="RotateTextTransformRight" Angle="90"/>
        <RotateTransform x:Key="RotateTransform180" Angle="180"/>
        <RotateTransform x:Key="RotateTransform0" Angle="0"/>

        <!-- Estilo do botão com hover e sombra leve -->
        <Style x:Key="DockButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" BlurRadius="5" Opacity="0.2" ShadowDepth="0"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                 To="1.2" Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                 To="1.2" Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="Effect.Opacity"
                                                 To="0.4" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                 To="1" Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                 To="1" Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="Effect.Opacity"
                                                 To="0.2" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ScrollViewer estilo discreto -->
        <Style TargetType="ScrollBar" x:Key="TransparentScrollBar">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="8"/>
            <Setter Property="Height" Value="8"/>
            <Setter Property="Opacity" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="0.5"/>
                    <Setter Property="Background" Value="#80000000"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <!-- Barra expandida -->
        <Border Background="#CC2D2D30"
                BorderBrush="#FF3E3E42"
                BorderThickness="1"
                Width="250"
                Visibility="{Binding IsExpanded, Converter={StaticResource BoolToVisibilityConverter}}"
                Drop="MainWindow_Drop"
                DragEnter="MainWindow_DragEnter"
                AllowDrop="True">
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext.DockPosition, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Left">
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter Property="CornerRadius" Value="0,0,0,0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DataContext.DockPosition, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Right">
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                            <Setter Property="CornerRadius" Value="0,0,0,0"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="189*"/>
                    <ColumnDefinition Width="59*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <!-- Menu superior -->
                    <RowDefinition Height="*"/>
                    <!-- Conteúdo da barra -->
                </Grid.RowDefinitions>

                <!-- Menu superior com 3 botões -->
                <Border Grid.Row="0" Background="#FF3E3E42" Grid.ColumnSpan="2">
                    <Grid>
                        <!-- Título -->
                        <TextBlock Text="SlideDock"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Left"
                   Margin="10,0,0,0"
                   Foreground="White"
                   FontWeight="Bold"
                   FontSize="14"/>

                        <!-- Botões -->
                        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Margin="0,0,10,0">


                            <!-- Adicionar Grupo -->
                            <Button Style="{StaticResource IconButtonStyle}"
                    Command="{Binding DockManager.AddMenuGroupCommand}"
                    ToolTip="Adicionar Grupo">
                                <TextBlock FontFamily="pack://application:,,,/FontAwesome.WPF;component/#FontAwesome Solid"
                           Text="&#xf067;" 
                           FontSize="16"
                           Foreground="White"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
                            </Button>

                            <!-- Mover Barra para Outro Lado -->
                            <Button Style="{StaticResource IconButtonStyle}"
                    Command="{Binding DockManager.ToggleDockSideCommand}"
                    ToolTip="Mover Barra">
                                <TextBlock FontFamily="pack://application:,,,/FontAwesome.WPF;component/#FontAwesome Solid"
                           Text="&#xf0ec;" 
                           FontSize="16"
                           Foreground="White"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
                            </Button>

                            <!-- Sair / Fechar Aplicativo -->
                            <Button Style="{StaticResource IconButtonStyle}"
                    Command="{Binding CloseApplicationCommand}"
                    ToolTip="Sair">
                                <TextBlock FontFamily="pack://application:,,,/FontAwesome.WPF;component/#FontAwesome Solid"
                           Text="&#xf08b;"  
                           FontSize="16"
                           Foreground="Red"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
                            </Button>

                        </StackPanel>
                    </Grid>
                </Border>

                <!-- Conteúdo da barra (scroll) -->
                <ScrollViewer Grid.Row="1"
                              VerticalScrollBarVisibility="Auto"
                              HorizontalScrollBarVisibility="Disabled"
                              Grid.ColumnSpan="2">
                    <ScrollViewer.Resources>
                        <Style TargetType="ScrollBar" BasedOn="{StaticResource TransparentScrollBar}"/>
                    </ScrollViewer.Resources>
                    <ItemsControl ItemsSource="{Binding DockManager.MenuGroups}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <local:MenuGroupView/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </Border>

        <!-- Alça vertical à direita da barra -->
        <Border Grid.ZIndex="10"
                Background="#CC2D2D30"
                Width="30"
                Visibility="{Binding IsExpanded, Converter={StaticResource BoolToVisibilityConverter}}">
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext.DockPosition, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Left">
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter Property="Margin" Value="250,0,0,0"/>
                            <Setter Property="CornerRadius" Value="0,8,8,0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DataContext.DockPosition, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Right">
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                            <Setter Property="Margin" Value="0,0,250,0"/>
                            <Setter Property="CornerRadius" Value="8,0,0,8"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Button Command="{Binding ToggleDockCommand}"
                    Style="{StaticResource DockButtonStyle}"
                    ToolTip="Ocultar SlideDock"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBlock Text="Ocultar SlideDock"
                               Foreground="White"
                               FontWeight="Bold"
                               FontSize="13"
                               TextAlignment="Center"
                               Margin="0,0,0,4">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.DockPosition, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Left">
                                        <Setter Property="LayoutTransform" Value="{StaticResource RotateTextTransform}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DataContext.DockPosition, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Right">
                                        <Setter Property="LayoutTransform" Value="{StaticResource RotateTextTransformRight}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <Path Data="M0,0 L10,5 L0,10 Z"
                          Fill="White"
                          Width="12" Height="12"
                          RenderTransformOrigin="0.5,0.5">
                        <Path.Style>
                            <Style TargetType="Path">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.DockPosition, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Left">
                                        <Setter Property="RenderTransform" Value="{StaticResource RotateTransform180}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DataContext.DockPosition, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Right">
                                        <Setter Property="RenderTransform" Value="{StaticResource RotateTransform0}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                </StackPanel>
            </Button>
        </Border>

    </Grid>
</UserControl>
<UserControl x:Class="SlideDock.Views.AppIconView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewmodels="clr-namespace:SlideDock.ViewModels"
             mc:Ignorable="d"
             d:DesignHeight="50" d:DesignWidth="50"
             DataContext="{Binding}">
    <!-- Using Border instead of Button to avoid mouse event conflicts with drag and drop -->
    <Border Name="AppIconBorder" 
            PreviewMouseLeftButtonDown="AppIcon_PreviewMouseLeftButtonDown"
            PreviewMouseLeftButtonUp="AppIcon_PreviewMouseLeftButtonUp"
            MouseMove="AppIcon_MouseMove"
            MouseLeave="AppIcon_MouseLeave"
            Background="Transparent"
            ToolTip="{Binding Name}"
            Cursor="Hand">
        <Border.Style>
            <Style TargetType="Border">
                <!-- Adding hover effects similar to button style -->
                <Setter Property="Background" Value="Transparent"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#20FFFFFF"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Border.ContextMenu>
            <ContextMenu>
                <MenuItem Header="Remover App"
                          Command="{Binding RemoveAppCommand}"/>
                <MenuItem Header="Abrir Pasta"
                          Command="{Binding OpenFolderCommand}"/>
            </ContextMenu>
        </Border.ContextMenu>
        <!-- Adding click handling through code-behind instead of Command binding -->
        <Image Source="{Binding IconSource}"
               Width="24"
               Height="24">
            <Image.Style>
                <Style TargetType="Image">
                    <Setter Property="Source" Value="{Binding IconSource}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IconSource}" Value="{x:Null}">
                            <Setter Property="Source">
                                <Setter.Value>
                                    <DrawingImage>
                                        <DrawingImage.Drawing>
                                            <GeometryDrawing Brush="LightBlue">
                                                <GeometryDrawing.Geometry>
                                                    <RectangleGeometry Rect="0,0,24,24"/>
                                                </GeometryDrawing.Geometry>
                                            </GeometryDrawing>
                                        </DrawingImage.Drawing>
                                    </DrawingImage>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>
    </Border>
</UserControl>
